#! /bin/sh
#
# Startup preparations for ffritz on atom.
#
#	- creating/transferring passwords and users
#	- creating dropbear host keys if required
#	- transferring dropbear host keys from persistent memory
#	- transferring roots .ssh from persistent memory
#	
#

export FFINSTDIR=/usr/local
export FFRITZ_HOME=/var/media/ftp/ffritz
export FFLOG=/var/log/ffritz.log

DATADIR=$FFRITZ_HOME/data

NVRAM_FILE=$DATADIR/ffstore.dat
BINFILE=$DATADIR/ffimage.bin
PRIVKEY=/var/flash/websrv_ssl_key.pem

NVRAM_COPY=/var/tmp/ffnvram

echo `date` :: ffinit >>$FFLOG

## Temporarily start telnetd
##
/usr/bin/telnetd -l /sbin/ar7login
nohup sh -c "sleep 300; echo killing telnetd > /dev/console; sleep 10; killall telnetd" &

## Decrypt presistent storage image to /var/tmp/ffnvram
##
## Exit code: 0 on success, 1 otherwise
##
decrypt_nvram()
{
## look for encrypted storage
	if [ ! -r $NVRAM_FILE ]; then
		echo encrypted storage $NVRAM_FILE not present >>$FFLOG
		return 1
	fi

### if found, try to decrypt it into ramfs
	privatekeypassword | openssl enc -d -pass stdin -aes-256-cbc -in $NVRAM_FILE -out $NVRAM_COPY/nv.tar

	if [ $? -ne 0 ]; then
		echo failed to decypt $NVRAM_FILE >>$FFLOG
		return 1
	fi

### unpack it to ramfs
	cd $NVRAM_COPY	|| exit 1
	tar xf $NVRAM_COPY/nv.tar || exit 1
	rm -f $NVRAM_COPY/nv.tar
	chmod 700 $NVRAM_COPY
}

#####################################

## Make users
grep ffritz /etc/passwd >/dev/null || echo ffritz:x:8000:8000:ffritz:/var/media/ftp/ffritz:/bin/sh >> /etc/passwd
grep ffritz /etc/group >/dev/null  || echo ffritz:x:8000: >> /etc/group
grep usb /etc/group >/dev/null     || echo usb:x:8001:ffritz >> /etc/group

# The upmpdcli user is required by the upmpdcli daemon
#
grep upmpdcli /etc/passwd >/dev/null || echo upmpdcli:x:8001:8000:upmpdcli:/var/media/ftp/ffritz:/bin/sh >> /etc/passwd

if [ ! -d ~ffritz/.mpd ]; then
    mkdir -p ~ffritz/.mpd
fi
if [ ! -d ~ffritz/etc ]; then
    mkdir -p ~ffritz/etc
fi

chown ffritz:ffritz ~ffritz
chown ffritz:ffritz ~ffritz/.mpd
chown ffritz:ffritz ~ffritz/etc
chmod 775 ~ffritz
chmod 775 ~ffritz/.mpd
chmod 775 ~ffritz/etc

## begin log
touch $FFLOG
chmod 666 $FFLOG

## Make a RAM copy that contains the contents of the encrypted storage
rm -rf $NVRAM_COPY
mkdir -p $NVRAM_COPY  || exit 1
chmod 700 $NVRAM_COPY || exit 1

touch /var/tmp/openssl.cnf

decrypt_nvram

## If something went wrong with decrypting nvram storage, try legacy mode
## (copy from /nvram on ARM)
if [ $? -ne 0 ]; then
	echo failed to decrypt nvram image, copying /nvram data >>$FFLOG
	rpc tar cf - nvram/shadow nvram/root-ssh_x86 nvram/dropbear_x86 | (cd $NVRAM_COPY; tar xf -)
	mv $NVRAM_COPY/nvram/shadow $NVRAM_COPY
	mv $NVRAM_COPY/nvram/root-ssh_x86 $NVRAM_COPY/root-ssh
	mv $NVRAM_COPY/nvram/dropbear_x86 $NVRAM_COPY/dropbear
	rmdir $NVRAM_COPY/nvram
fi

## install data to correct places
if [ -r $NVRAM_COPY/shadow ]; then
	rm -f /var/tmp/shadow
	ln -s $NVRAM_COPY/shadow /var/tmp/shadow
fi

rm -rf /var/tmp/dropbear
mkdir -p $NVRAM_COPY/dropbear
chmod 700 $NVRAM_COPY/dropbear
ln -s $NVRAM_COPY/dropbear /var/tmp/dropbear

rm -rf /var/tmp/root-ssh
mkdir -p $NVRAM_COPY/root-ssh
chmod 700 $NVRAM_COPY/root-ssh
ln -s $NVRAM_COPY/root-ssh /var/tmp/root-ssh

## create dropbear RSA private key
## This is supposed to work even if all of the above failed to be able to start
## a dropbear daemon. The final fallback is the temporary telnet daemon ..
##
if [ ! -f /var/tmp/dropbear/dropbear_rsa_host_key.cvt -o ! -f /var/tmp/dropbear/rsa_key_dontoverwrite ]; then
	privatekeypassword | openssl rsa -passin stdin -in $PRIVKEY -out /tmp/websrv_ssl_key_dec.pem && \
		dropbearconvert openssh dropbear /tmp/websrv_ssl_key_dec.pem /var/tmp/dropbear/dropbear_rsa_host_key.cvt
	rm -f /tmp/websrv_ssl_key_dec.pem

	## install as private rsa key. If this fails, dropbear will either use an existing one from 
	## /nvram or fail to start. We dont want to use random host keys for each startup.
	if [ -r /var/tmp/dropbear/dropbear_rsa_host_key.cvt ]; then
		mv /var/tmp/dropbear/dropbear_rsa_host_key.cvt /var/tmp/dropbear/dropbear_rsa_host_key
	else
		echo failed to convert box private key to dropbear private key >>$FFLOG
	fi
fi
