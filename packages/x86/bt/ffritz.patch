diff --git a/example/a2dp_sink_demo.c b/example/a2dp_sink_demo.c
index d8e7ae9b8..3334af52c 100644
--- a/example/a2dp_sink_demo.c
+++ b/example/a2dp_sink_demo.c
@@ -79,7 +79,7 @@
 
 #ifdef HAVE_POSIX_FILE_IO
 #include "wav_util.h"
-#define STORE_TO_SBC_FILE 
+#undef STORE_TO_SBC_FILE 
 #define STORE_TO_WAV_FILE 
 #endif
 
@@ -126,6 +126,8 @@ static char * sbc_filename = "avdtp_sink.sbc";
 
 static int volume_percentage = 0; 
 
+const char *sink_name = "A2DP Sink Demo 00:00:00:00:00:00";
+
 typedef struct {
     // bitmaps
     uint8_t sampling_frequency_bitmap;
@@ -271,7 +273,7 @@ static int a2dp_and_avrcp_setup(void){
     avrcp_target_create_sdp_record(sdp_avrcp_target_service_buffer, 0x10003, target_supported_features, NULL, NULL);
     sdp_register_service(sdp_avrcp_target_service_buffer);
 
-    gap_set_local_name("A2DP Sink Demo 00:00:00:00:00:00");
+    gap_set_local_name(sink_name);
     gap_discoverable_control(1);
     gap_set_class_of_device(0x200408);
 
@@ -885,7 +887,9 @@ static void a2dp_sink_packet_handler(uint8_t packet_type, uint16_t channel, uint
                 break;
             }
             
+#ifdef HAVE_BTSTACK_STDIN
             memcpy(device_addr, address, 6);
+#endif
             a2dp_local_seid = a2dp_subevent_stream_established_get_local_seid(packet);
             printf("A2DP  Sink      : Streaming connection is established, address %s, cid 0x%02X, local seid %d\n", bd_addr_to_str(address), a2dp_cid, a2dp_local_seid);
             break;
@@ -1119,6 +1123,15 @@ int btstack_main(int argc, const char * argv[]){
     UNUSED(argc);
     (void)argv;
 
+    if (argc > 1)
+	sink_name = argv[1];
+
+    if (argc > 2)
+	wav_filename = (char*)argv[2];
+
+    printf ("name: %s  output=%s\n", sink_name, wav_filename);
+ 
+
     a2dp_and_avrcp_setup();
 
 #ifdef HAVE_BTSTACK_STDIN
diff --git a/platform/libusb/hci_transport_h2_libusb.c b/platform/libusb/hci_transport_h2_libusb.c
index fa54a0f74..8aae94ea6 100644
--- a/platform/libusb/hci_transport_h2_libusb.c
+++ b/platform/libusb/hci_transport_h2_libusb.c
@@ -85,6 +85,14 @@
 
 #define ASYNC_POLLING_INTERVAL_MS 1
 
+#ifndef LIBUSB_LOG_LEVEL_WARNING
+#define LIBUSB_LOG_LEVEL_WARNING 1
+#endif
+
+#ifndef LIBUSB_LOG_LEVEL_ERROR
+#define LIBUSB_LOG_LEVEL_ERROR 2
+#endif
+
 //
 // Bluetooth USB Transport Alternate Settings:
 //
diff --git a/platform/posix/btstack_link_key_db_fs.c b/platform/posix/btstack_link_key_db_fs.c
index 0c70b3e45..75c7febba 100644
--- a/platform/posix/btstack_link_key_db_fs.c
+++ b/platform/posix/btstack_link_key_db_fs.c
@@ -54,7 +54,7 @@
 #ifdef _WIN32
 #define LINK_KEY_PATH ""
 #else
-#define LINK_KEY_PATH "/tmp/"
+#define LINK_KEY_PATH "/var/run/bt/"
 #endif
 #endif
 
diff --git a/port/libusb/Makefile b/port/libusb/Makefile
index a5f4c1372..3d61cb270 100644
--- a/port/libusb/Makefile
+++ b/port/libusb/Makefile
@@ -1,3 +1,8 @@
+SYSROOT     = $(BUILDROOT)/output/host/usr/i686-buildroot-linux-gnu/sysroot
+TOOLCHAIN   = $(shell cd $(BUILDROOT)/output/host/usr/bin/; pwd)
+export PATH := $(TOOLCHAIN):$(PATH)
+CC=i686-linux-gcc
+
 # Makefile for libusb based examples
 BTSTACK_ROOT ?= ../..
 
@@ -29,8 +35,10 @@ VPATH += ${BTSTACK_ROOT}/chipset/csr
 VPATH += ${BTSTACK_ROOT}/chipset/zephyr
 
 # use pkg-config
-CFLAGS  += $(shell pkg-config libusb-1.0 --cflags)
-LDFLAGS += $(shell pkg-config libusb-1.0 --libs)
+#CFLAGS  += $(shell pkg-config libusb-1.0 --cflags)
+#LDFLAGS += $(shell pkg-config libusb-1.0 --libs)
+CFLAGS  += -I$(SYSROOT)/usr/include/libusb-1.0
+LDFLAGS += -L$(SYSROOT)/usr/lib -lusb-1.0
 
 EXAMPLES = ${EXAMPLES_GENERAL} ${EXAMPLES_CLASSIC_ONLY} ${EXAMPLES_LE_ONLY} ${EXAMPLES_DUAL_MODE}
 EXAMPLES += pan_lwip_http_server
diff --git a/port/libusb/btstack_config.h b/port/libusb/btstack_config.h
index be90d576f..ffd9e61a1 100644
--- a/port/libusb/btstack_config.h
+++ b/port/libusb/btstack_config.h
@@ -8,7 +8,7 @@
 // Port related features
 #define HAVE_MALLOC
 #define HAVE_POSIX_FILE_IO
-#define HAVE_BTSTACK_STDIN
+#undef HAVE_BTSTACK_STDIN
 #define HAVE_POSIX_TIME
 
 // BTstack features that can be enabled
