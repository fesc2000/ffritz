diff --git a/example/a2dp_sink_demo.c b/example/a2dp_sink_demo.c
index 95409ef..26c932d 100644
--- a/example/a2dp_sink_demo.c
+++ b/example/a2dp_sink_demo.c
@@ -78,7 +78,7 @@
 
 #ifdef HAVE_POSIX_FILE_IO
 #include "wav_util.h"
-#define STORE_SBC_TO_SBC_FILE 
+#undef STORE_SBC_TO_SBC_FILE 
 #define STORE_SBC_TO_WAV_FILE 
 #endif
 
@@ -122,6 +122,8 @@ static FILE * sbc_file;
 static char * sbc_filename = "avdtp_sink.sbc";
 #endif
 
+const char *sink_name = "A2DP Sink Demo 00:00:00:00:00:00";
+
 typedef struct {
     // bitmaps
     uint8_t sampling_frequency_bitmap;
@@ -238,7 +240,7 @@ static int a2dp_and_avrcp_setup(void){
     avrcp_controller_create_sdp_record(sdp_avrcp_controller_service_buffer, 0x10001, AVRCP_BROWSING_ENABLED, 1, NULL, NULL);
     sdp_register_service(sdp_avrcp_controller_service_buffer);
     
-    gap_set_local_name("A2DP Sink Demo 00:00:00:00:00:00");
+    gap_set_local_name(sink_name);
     gap_discoverable_control(1);
     gap_set_class_of_device(0x200408);
 
@@ -711,7 +713,9 @@ static void a2dp_sink_packet_handler(uint8_t packet_type, uint16_t channel, uint
             }
             printf("A2DP Sink demo: streaming connection is established, address %s, a2dp cid 0x%02X, local_seid %d\n", bd_addr_to_str(address), a2dp_cid, local_seid);
             
+#ifdef HAVE_BTSTACK_STDIN
             memcpy(device_addr, address, 6);
+#endif
 
             local_seid = a2dp_subevent_stream_established_get_local_seid(packet);
             a2dp_sink_connected = 1;
@@ -952,6 +956,15 @@ int btstack_main(int argc, const char * argv[]){
     UNUSED(argc);
     (void)argv;
 
+    if (argc > 1)
+	sink_name = argv[1];
+
+    if (argc > 2)
+	wav_filename = (char*)argv[2];
+
+    printf ("name: %s  output=%s\n", sink_name, wav_filename);
+ 
+
     a2dp_and_avrcp_setup();
 
 #ifdef HAVE_BTSTACK_STDIN
diff --git a/platform/libusb/hci_transport_h2_libusb.c b/platform/libusb/hci_transport_h2_libusb.c
index 7a289e7..3b24bf4 100644
--- a/platform/libusb/hci_transport_h2_libusb.c
+++ b/platform/libusb/hci_transport_h2_libusb.c
@@ -85,6 +85,14 @@
 
 #define ASYNC_POLLING_INTERVAL_MS 1
 
+#ifndef LIBUSB_LOG_LEVEL_WARNING
+#define LIBUSB_LOG_LEVEL_WARNING 1
+#endif
+
+#ifndef LIBUSB_LOG_LEVEL_ERROR
+#define LIBUSB_LOG_LEVEL_ERROR 2
+#endif
+
 //
 // Bluetooth USB Transport Alternate Settings:
 //
diff --git a/platform/posix/btstack_link_key_db_fs.c b/platform/posix/btstack_link_key_db_fs.c
index ade3c52..96a0ab5 100644
--- a/platform/posix/btstack_link_key_db_fs.c
+++ b/platform/posix/btstack_link_key_db_fs.c
@@ -54,7 +54,7 @@
 #ifdef _WIN32
 #define LINK_KEY_PATH ""
 #else
-#define LINK_KEY_PATH "/tmp/"
+#define LINK_KEY_PATH "/var/run/bt/"
 #endif
 #endif
 
diff --git a/port/libusb/Makefile b/port/libusb/Makefile
index 085b076..2d8e416 100644
--- a/port/libusb/Makefile
+++ b/port/libusb/Makefile
@@ -1,3 +1,9 @@
+BUILDROOT   = $(shell cd ../../../../buildroot/build; pwd)
+SYSROOT     = $(BUILDROOT)/output/host/usr/i686-buildroot-linux-uclibc/sysroot
+TOOLCHAIN   = $(shell cd $(BUILDROOT)/output/host/usr/bin/; pwd)
+export PATH := $(TOOLCHAIN):$(PATH)
+CC=i686-buildroot-linux-uclibc-gcc
+
 # Makefile for libusb based examples
 BTSTACK_ROOT = ../..
 
@@ -27,8 +33,10 @@ VPATH += ${BTSTACK_ROOT}/platform/libusb
 VPATH += ${BTSTACK_ROOT}/chipset/csr
 
 # use pkg-config
-CFLAGS  += $(shell pkg-config libusb-1.0 --cflags)
-LDFLAGS += $(shell pkg-config libusb-1.0 --libs)
+#CFLAGS  += $(shell pkg-config libusb-1.0 --cflags)
+#LDFLAGS += $(shell pkg-config libusb-1.0 --libs)
+CFLAGS  += -I$(SYSROOT)/usr/include/libusb-1.0
+LDFLAGS += -L$(SYSROOT)/usr/lib -lusb-1.0
 
 EXAMPLES += csr_set_bd_addr
 
diff --git a/port/libusb/btstack_config.h b/port/libusb/btstack_config.h
index 66d77ad..5cd739c 100644
--- a/port/libusb/btstack_config.h
+++ b/port/libusb/btstack_config.h
@@ -8,7 +8,7 @@
 // Port related features
 #define HAVE_MALLOC
 #define HAVE_POSIX_FILE_IO
-#define HAVE_BTSTACK_STDIN
+#undef HAVE_BTSTACK_STDIN
 #define HAVE_POSIX_TIME
 
 // BTstack features that can be enabled
