#!/bin/sh
# Xfeature:getconfig
#
# Wrapper to call mpd with the proper libraries and config file
# Never returns, should be called with nohup
#
. /usr/local/etc/ffritz-env.sh || exit 1

ENABLE_UPMPDCLI=1
ENABLE_YMPD=1

test -z $2 || . $2

# A deamon which runs scripts when mpd starts/stop playing
#
mpd_status_loop()
{
	while true; do
		mpc idle player || sleep 1

		mpc status | grep '\[playing\]' >/dev/null 2>&1
		if [ $? -eq 0 ]; then
			test -r $NVRAM/etc/mpd-play-start && $NVRAM/etc/mpd-play-start
		else
			test -r $NVRAM/etc/mpd-play-stop && $NVRAM/etc/mpd-play-stop
		fi
	done
}

BR_DIR=/tmp/br

if [ "$1" = "status_loop" ]; then
	mpd_status_loop
	exit 1
fi

if [ "x$1" = "xstop" ]; then
    ffdaemon -K upmpdcli
    ffdaemon -K ympd
    ffdaemon -K mpd_status
    ffdaemon -K mpd
    exit
fi

if [ "x$1" = "xgetconfig" ]; then
	echo "# Whether to enable upmpdcli:"
	echo ENABLE_UPMPDCLI=$ENABLE_UPMPDCLI
	echo
	echo "# Whether to enable ympd:"
	echo ENABLE_YMPD=$ENABLE_YMPD
	exit 0
fi

if [ "x$1" = "xinfo" ]; then
	DAEMONS=mpd
	test $ENABLE_UPMPDCLI -eq 1 && DAEMONS="$DAEMONS upmpdcli"
	test $ENABLE_YMPD -eq 1 && DAEMONS="$DAEMONS ympd"
	echo DAEMONS=\"$DAEMONS\"
	echo USB_CLASS=01
	exit 0
fi

if [ "x$1" != "xstart" ]; then
	exit 0
fi

$FFINSTDIR/etc/mkusers || exit 1
mkdir -p /var/run/mpd
chown ffritz /var/run/mpd

# Make sure usbplayd runs and/or sound modules are loaded
#
ffservice start usbplayd

# generate mpd.conf from template
#
if [ ! -f $FFRITZ_HOME/mpd.conf ]; then
    sed -e "s@FFINSTDIR@$FFINSTDIR@" < $FFINSTDIR/etc/mpd.conf > $FFRITZ_HOME/mpd.conf
fi
sed -i -e "s@\(.*\"\).*\(/bin/usbplay.*\)@\1$FFINSTDIR\2@" $FFRITZ_HOME/mpd.conf
chown ffritz:ffritz $FFRITZ_HOME/mpd.conf

# create initial upmpdcli.conf from default
#
if [ ! -f $FFRITZ_HOME/upmpdcli.conf ]; then
    rm -f $FFRITZ_HOME/upmpdcli.conf
    cp $FFINSTDIR/etc/upmpdcli.conf-dist $FFRITZ_HOME/upmpdcli.conf 
    chown ffritz:ffritz $FFRITZ_HOME/upmpdcli.conf
fi

touch /var/log/mpd.log
chmod 666 /var/log/mpd.log
mkdir -p /var/run/mpd
chmod 777 /var/run/mpd
chmod -R 777 /dev/snd

# Run mpd (as respawning daemon, allow RT scheduling)
#
ffdaemon -H RTPRIO=0 -r ffritz mpd --no-daemon $FFRITZ_HOME/mpd.conf


# Run upmpdcli (UPNP frontent to MPD)
#
# Use chroot environment from buildroot service
#
if [ $ENABLE_UPMPDCLI -eq 1 ]; then 
	if [ -d $BR_DIR/usr/share/upmpdcli/ ]; then
	    sleep 1
	    ffdaemon -i 10 -o $BR_DIR upmpdcli -c $FFRITZ_HOME/upmpdcli.conf 
	else
	    echo upmpdcli not started, requires buildroot service
	fi
fi

# Run ympd (HTTP frontent to MPD)
#
if [ $ENABLE_YMPD -eq 1 ]; then
	sleep 1
	ffdaemon $FFINSTDIR/bin/ympd -w 82 -u ffritz
fi

# Run mpd status loop
#
ffdaemon -N mpd_status sh -c "$0 status_loop"
