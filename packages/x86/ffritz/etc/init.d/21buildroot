#!/bin/sh
#
# (de)construct a chroot'able filesystem out of a buildroot
#

BR_DIR=/tmp/br
BR_OVERLAY=/tmp/ffnvram/rootfs-overlay
BR_ROOT=/usr/local/buildroot

# Mount table for rootfs
mtab()
{
	echo /dev devtmpfs
	echo /etc NVRAM
	echo /proc proc
	echo /root NVRAM
	echo /run tmpfs
	echo /sys sysfs
	echo /tmp tmpfs
	echo /run tmpfs
	echo /var NVRAM
}

# Reverse mount table
mtab_r()
{
	mtab | grep -n "" |sort -nr|sed -e 's/^[0-9]*://'
}

umount_all()
{
	mtab | while read line; do
		set $line
		umount $BR_DIR/$1
	done
	umount $BR_DIR
}

abort()
{
	echo $*
	umount_all
	exit 1
}


if [ "x$1" = "xstop" ]; then
	umount_all
	exit 0
fi

if [ ! -d $BR_OVERLAY ]; then
	echo buildroot overlay does not exist: $BR_OVERLAY
	exit 1
fi

if [ ! -d $BR_ROOT ]; then
	echo buildroot root image directory does not exist: $BR_ROOT
	exit 1
fi

if [ -d $BR_OVERLAY/proc/self ]; then
	echo $BR_OVERLAY directory is not clean
	exit 1
fi

mkdir -p $BR_DIR
mount --redir $BR_ROOT $BR_DIR || exit 1

mtab | while read line; do
	set $line
	if [ "$2" = "NVRAM" ]; then
		mkdir -p /tmp/ffnvram/rootfs-overlay/$1 || abort
		unionfs -o cow,dev,suid,allow_other,nonempty $BR_OVERLAY/$1=RW:$BR_ROOT/$1=RO $BR_DIR/$1 || abort
	else
		mount -t $2 none $BR_DIR/$1 || abort
	fi
done
