#!/bin/sh
#
# Wrapper to call mpd with the proper libraries and config file
# Never returns, should be called with nohup
#
. `dirname $0`/../etc/ffritz-env.sh || exit 1

cd /

# make sure required user/group exists
# only required if the standalone package is installed. If ffritz is invoked via arm core
# this is already done.
#
grep ffritz /etc/passwd >/dev/null || echo ffritz:x:8000:8000:ffritz:/var/media/ftp/ffritz:/bin/sh >> /etc/passwd
grep ffritz /etc/group >/dev/null || echo ffritz:x:8000: >> /etc/group
grep usb /etc/group >/dev/null || echo usb:x:8001:ffritz >> /etc/group

if [ ! -d ~ffritz/.mpd ]; then
    mkdir -p ~ffritz/.mpd
fi
chown ffritz:ffritz ~ffritz/.mpd

# if there is no udev rule, explicitly allow usb group access to usb endpoints.
#
if [ ! -f /etc/udev/rules.d/39-ffritz.rules ]; then
    find /dev/bus/usb | xargs chgrp usb
fi

# make sure volume transfer file exists
#
touch /var/tmp/volume
chown ffritz /var/tmp/volume

# generate mpd.conf from template
#
if [ ! -f $FFRITZ_HOME/mpd.conf ]; then
    sed -e "s@FFINSTDIR@$FFINSTDIR@" < $FFINSTDIR/etc/mpd.conf > $FFRITZ_HOME/mpd.conf
fi
sed -i -e "s@\(.*\"\).*\(/bin/usbplay.*\)@\1$FFINSTDIR\2@" $FFRITZ_HOME/mpd.conf
chown ffritz:ffritz $FFRITZ_HOME/mpd.conf

# Run mpd in endless loop in case it crashes
#
while true; do
	$FFINSTDIR/bin/mpd --no-daemon $FFRITZ_HOME/mpd.conf
	sleep 1
done
